//
// Generated by LLVM NVPTX Back-End
//

.version 6.3
.target sm_60
.address_size 64

.extern .func __kmpc_kernel_init
(
	.param .b32 __kmpc_kernel_init_param_0,
	.param .b32 __kmpc_kernel_init_param_1
)
;
.extern .func __kmpc_data_sharing_init_stack
()
;
.extern .func __kmpc_kernel_deinit
(
	.param .b32 __kmpc_kernel_deinit_param_0
)
;
.extern .func __kmpc_barrier_simple_spmd
(
	.param .b64 __kmpc_barrier_simple_spmd_param_0,
	.param .b32 __kmpc_barrier_simple_spmd_param_1
)
;
.extern .func  (.param .b32 func_retval0) __kmpc_kernel_parallel
(
	.param .b64 __kmpc_kernel_parallel_param_0,
	.param .b32 __kmpc_kernel_parallel_param_1
)
;
.extern .func  (.param .b32 func_retval0) __kmpc_global_thread_num
(
	.param .b64 __kmpc_global_thread_num_param_0
)
;
.extern .func __kmpc_kernel_end_parallel
()
;
.shared .align 8 .u64 _openmp_kernel_static_glob_rd$ptr;
.global .align 1 .b8 _$_str[23] = {59, 117, 110, 107, 110, 111, 119, 110, 59, 117, 110, 107, 110, 111, 119, 110, 59, 48, 59, 48, 59, 59, 0};
.global .align 8 .u64 __unnamed_1[3] = {8589934592, 0, generic(_$_str)};
.weak .global .align 1 .u8 __omp_offloading_10302_3b0082a_main_l6_exec_mode = 1;

.func __omp_offloading_10302_3b0082a_main_l6_worker()
{
	.local .align 8 .b8 	__local_depot0[16];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<3>;
	.reg .b16 	%rs<5>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<8>;

	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	mov.u64 	%rd2, 0;
	st.u64 	[%SP+0], %rd2;
	mov.u16 	%rs1, 0;
	st.u8 	[%SP+8], %rs1;
	bra.uni 	LBB0_1;
LBB0_1:
	mov.u64 	%rd3, 0;
	mov.u32 	%r1, 0;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd3;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r1;
	call.uni 
	__kmpc_barrier_simple_spmd, 
	(
	param0, 
	param1
	);
	} // callseq 0
	add.u64 	%rd4, %SP, 0;
	mov.u32 	%r2, 1;
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd4;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r2;
	.param .b32 retval0;
	call.uni (retval0), 
	__kmpc_kernel_parallel, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r3, [retval0+0];
	} // callseq 1
	cvt.u16.u32 	%rs2, %r3;
	and.b16  	%rs3, %rs2, 1;
	st.u8 	[%SP+8], %rs3;
	ld.u64 	%rd1, [%SP+0];
	setp.eq.s64 	%p1, %rd1, 0;
	@%p1 bra 	LBB0_6;
	bra.uni 	LBB0_2;
LBB0_2:
	ld.u8 	%rs4, [%SP+8];
	setp.eq.s16 	%p2, %rs4, 0;
	@%p2 bra 	LBB0_5;
	bra.uni 	LBB0_3;
LBB0_3:
	mov.u64 	%rd5, __unnamed_1;
	cvta.global.u64 	%rd6, %rd5;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd6;
	.param .b32 retval0;
	call.uni (retval0), 
	__kmpc_global_thread_num, 
	(
	param0
	);
	ld.param.b32 	%r5, [retval0+0];
	} // callseq 2
	mov.u32 	%r7, 0;
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r7;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r5;
	prototype_3 : .callprototype ()_ (.param .b32 _, .param .b32 _);
	call 
	%rd1, 
	(
	param0, 
	param1
	)
	, prototype_3;
	} // callseq 3
	bra.uni 	LBB0_4;
LBB0_4:
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	call.uni 
	__kmpc_kernel_end_parallel, 
	(
	);
	} // callseq 4
	bra.uni 	LBB0_5;
LBB0_5:
	mov.u64 	%rd7, 0;
	mov.u32 	%r8, 0;
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd7;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r8;
	call.uni 
	__kmpc_barrier_simple_spmd, 
	(
	param0, 
	param1
	);
	} // callseq 5
	bra.uni 	LBB0_1;
LBB0_6:
	ret;

}
	// .weak	__omp_offloading_10302_3b0082a_main_l6
.weak .entry __omp_offloading_10302_3b0082a_main_l6(
	.param .u64 __omp_offloading_10302_3b0082a_main_l6_param_0
)
{
	.local .align 8 .b8 	__local_depot1[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<3>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<4>;

	mov.u64 	%SPL, __local_depot1;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd2, [__omp_offloading_10302_3b0082a_main_l6_param_0];
	st.u64 	[%SP+0], %rd2;
	add.u64 	%rd1, %SP, 0;
	mov.u32 	%r1, WARP_SZ;
	mov.u32 	%r2, %ntid.x;
	sub.s32 	%r3, %r2, %r1;
	mov.u32 	%r4, %tid.x;
	setp.ge.u32 	%p1, %r4, %r3;
	@%p1 bra 	LBB1_2;
	bra.uni 	LBB1_1;
LBB1_1:
	{ // callseq 10, 0
	.reg .b32 temp_param_reg;
	call.uni 
	__omp_offloading_10302_3b0082a_main_l6_worker, 
	(
	);
	} // callseq 10
	bra.uni 	LBB1_5;
LBB1_2:
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, WARP_SZ;
	add.s32 	%r7, %r6, -1;
	not.b32 	%r8, %r7;
	add.s32 	%r9, %r5, -1;
	and.b32  	%r10, %r9, %r8;
	mov.u32 	%r11, %tid.x;
	setp.ne.s32 	%p2, %r11, %r10;
	@%p2 bra 	LBB1_5;
	bra.uni 	LBB1_3;
LBB1_3:
	mov.u32 	%r12, WARP_SZ;
	mov.u32 	%r13, %ntid.x;
	sub.s32 	%r14, %r13, %r12;
	mov.u32 	%r15, 1;
	{ // callseq 6, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r14;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r15;
	call.uni 
	__kmpc_kernel_init, 
	(
	param0, 
	param1
	);
	} // callseq 6
	{ // callseq 7, 0
	.reg .b32 temp_param_reg;
	call.uni 
	__kmpc_data_sharing_init_stack, 
	(
	);
	} // callseq 7
	st.u32 	[%rd1], %r15;
	bra.uni 	LBB1_4;
LBB1_4:
	mov.u32 	%r16, 1;
	{ // callseq 8, 0
	.reg .b32 temp_param_reg;
	.param .b32 param0;
	st.param.b32 	[param0+0], %r16;
	call.uni 
	__kmpc_kernel_deinit, 
	(
	param0
	);
	} // callseq 8
	mov.u64 	%rd3, 0;
	mov.u32 	%r17, 0;
	{ // callseq 9, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd3;
	.param .b32 param1;
	st.param.b32 	[param1+0], %r17;
	call.uni 
	__kmpc_barrier_simple_spmd, 
	(
	param0, 
	param1
	);
	} // callseq 9
	bra.uni 	LBB1_5;
LBB1_5:
	ret;

}

